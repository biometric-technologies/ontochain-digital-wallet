name: Build and Release

on:
  push:
    branches:
      - master

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      project-version: ${{ steps.check.outputs.project-version }}
      version-changed: ${{ steps.check.outputs.version-changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history and tags

      - name: Get project version
        id: check
        run: |
          PROJECT_VERSION=$(grep 'version:' ./pubspec.yaml | awk '{print $2}')
          echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV
          echo "project-version=$PROJECT_VERSION" >> $GITHUB_OUTPUT
          TAG_EXISTS=$(git tag | grep -oP "^$PROJECT_VERSION$" || echo "")        
          if [[ -n "$TAG_EXISTS" ]]; then
            echo "version-changed=false" >> $GITHUB_OUTPUT
          else
            echo "version-changed=true" >> $GITHUB_OUTPUT
          fi

  build-and-release:
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    steps:
      - name: Check Out
        uses: actions/checkout@v3

      - name: Get version
        id: package_version
        run: |
          echo "VERSION=${{ needs.check-version.outputs.project-version }}" >> $GITHUB_ENV

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
          channel: 'stable'

      - name: Get Flutter Packages
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --debug

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: v${{ env.VERSION }}
          body: Automated release.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: build/app/outputs/flutter-apk/app-debug.apk
          asset_name: ingress-credit-wallet.apk
          asset_content_type: application/vnd.android.package-archive
